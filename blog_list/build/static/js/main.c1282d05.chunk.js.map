{"version":3,"sources":["components/ToggleDetails.js","components/Blog.js","services/blogs.js","services/login.js","components/LoginForm.js","components/BlogForm.js","components/Notification.js","components/Toggle.js","App.js","index.js"],"names":["ToggleDetails","buttonLabelWhenHidden","buttonLabelWhenShown","children","blog","useState","visible","setVisible","hide","display","show","toggleVisibility","style","data-testid","className","title","author","onClick","Blog","user","likeBlog","deleteBlog","getUserName","userName","handleDelete","paddingTop","paddingLeft","border","borderWidth","marginBottom","url","id","likes","blogObject","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","update","put","delete","login","credentials","console","log","LoginForm","password","setUserName","setPassword","setUser","setMessage","setMessageClass","handleLogin","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","blogService","setTimeout","onSubmit","type","value","name","onChange","target","BlogForm","addBlog","setTitle","setAuthor","setUrl","handleNewBlog","Notification","message","messageClass","Toggle","forwardRef","ref","useImperativeHandle","App","blogs","setBlogs","sortLikes","setSortLikes","useEffect","loggedUserJSON","getItem","parse","blogFormRef","useRef","updatedBlog","map","confirm","filter","current","newBlog","concat","blogsToShow","sort","blog1","blog2","clear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1282d05.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst ToggleDetails = ({ buttonLabelWhenHidden, buttonLabelWhenShown, children, blog }) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hide = { display: visible ? 'none' : '' }\r\n  const show = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hide} data-testid='hidden' className=\"hidden\">\r\n        {blog.title} {blog.author} \r\n        <button onClick={toggleVisibility}>{buttonLabelWhenHidden}</button>\r\n      </div>\r\n      <div style={show} data-testid='shown' className=\"shown\">\r\n        {blog.title} {blog.author} \r\n        <button onClick={toggleVisibility}>{buttonLabelWhenShown}</button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToggleDetails","import ToggleDetails from './ToggleDetails'\n\nconst Blog = ({ blog, user, likeBlog, deleteBlog }) => {\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const getUserName = !blog.user\n  ? null\n  : blog.user.userName\n\n  const handleLike = () => {\n    const id = blog.id\n    const blogObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes + 1\n    }\n    likeBlog(id, blogObject)\n  }\n\n  const handleDelete = () => {\n    deleteBlog(blog)\n  }\n\n  const showDeleteButton = () => {\n    if (!blog.user) return null\n    if (blog.user.userName === user.userName) {\n      return (\n        <button onClick={handleDelete}>delete</button>\n      )\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <div style={blogStyle} className=\"blog\">\n      <ToggleDetails \n        blog={blog} \n        buttonLabelWhenHidden='show details' \n        buttonLabelWhenShown='hide details'\n      >\n        <div>\n          <div>{blog.url}</div>\n          <div id=\"blog-likes\">\n            {blog.likes} \n            <button id=\"like-button\" onClick={handleLike}>like</button>\n          </div>\n          <div>\n            {getUserName}\n          </div>\n          {showDeleteButton()}\n        </div>\n      </ToggleDetails>\n    </div>  \n  )\n}\n\nexport default Blog","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst deleteBlog = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, setToken, update, deleteBlog }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nexport default ({ login })","import React from 'react'\r\nimport loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\n\r\nconst LoginForm = ({ \r\n   userName,\r\n   password,\r\n   setUserName, \r\n   setPassword, \r\n   setUser, \r\n   setMessage, \r\n   setMessageClass \r\n  }) => {\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        userName, password,\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedInUser', JSON.stringify(user)\r\n      ) \r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUserName('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setMessageClass('error')\r\n      setMessage('Invalid Username or Password')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      },  5000)\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleLogin}>\r\n      <h2>Log in</h2>\r\n      <div>\r\n        username:\r\n          <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={userName}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUserName(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password:\r\n          <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\" id=\"login-button\">login</button>\r\n    </form>  \r\n  )  \r\n}\r\nexport default LoginForm","import { useState } from 'react'\r\n\r\nconst BlogForm = ({\r\n   setMessage, \r\n   setMessageClass,\r\n   addBlog\r\n  }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const handleNewBlog = (blogObject) => {\r\n    addBlog(blogObject)\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n  const handleMissingInput = () => {\r\n    setMessageClass('error')\r\n    setMessage('Title and URL are required fields')\r\n    setTimeout(() => {\r\n      setMessage(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const blogObject = {\r\n      title: title,\r\n      author: author,\r\n      url: url\r\n    }\r\n    blogObject.title === '' || blogObject.url === ''\r\n    ? handleMissingInput()\r\n    : handleNewBlog(blogObject)\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Create New Blog</h2>\r\n      <div>\r\n        Title:\r\n        <input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          value={title}\r\n          name=\"title\"\r\n          onChange={({ target }) => setTitle(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        Author:\r\n        <input\r\n          id=\"author\"\r\n          type=\"text\"\r\n          value={author}\r\n          name=\"author\"\r\n          onChange={({ target }) => setAuthor(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        URL:\r\n        <input\r\n          id=\"url\"\r\n          type=\"text\"\r\n          value={url}\r\n          name=\"url\"\r\n          onChange={({ target }) => setUrl(target.value)}\r\n        />\r\n      </div>\r\n      <button id=\"blog-submit-button\" type=\"submit\">Add new</button>\r\n    </form>  \r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, messageClass }) => {\r\n  if (message === null) return null\r\n\r\n  return (\r\n    <div className={messageClass}>{message}</div>\r\n  )\r\n}\r\n\r\nexport default Notification","import { useState, forwardRef, useImperativeHandle } from 'react'\r\n\r\nconst Toggle = forwardRef(({ buttonLabelWhenHidden, buttonLabelWhenShown, children }, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hide = { display: visible ? 'none' : '' }\r\n  const show = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hide}>\r\n        <button onClick={toggleVisibility}>{buttonLabelWhenHidden}</button>\r\n      </div>\r\n      <div style={show}>\r\n        {children}\r\n        <button onClick={toggleVisibility}>{buttonLabelWhenShown}</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Toggle","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Notification from './components/Notification'\nimport Toggle from './components/Toggle'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [userName, setUserName] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [message, setMessage] = useState(null)\n  const [messageClass, setMessageClass] = useState('added')\n  const [sortLikes, setSortLikes] = useState(false)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const blogFormRef = useRef()\n\n  const handleLogout = () => {\n    window.localStorage.clear()\n    setUser(null)\n    setUserName('')\n    setPassword('')\n  }\n\n  const likeBlog = async (id, blogObject) => {\n    const updatedBlog = await blogService.update(id, blogObject)\n    setBlogs(blogs.map(blog => blog.id !== id ? blog : updatedBlog))\n  }\n\n  const deleteBlog = async (blog) => {\n    if (window.confirm(`Delete \"${blog.title}\"?`)) {\n      const id = blog.id\n      await blogService.deleteBlog(id)\n      setBlogs(blogs.filter(blog => blog.id !== id))\n    }\n  }\n\n  const addBlog = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      const newBlog = await blogService.create(blogObject)\n      setBlogs(blogs.concat(newBlog))\n      setMessageClass('added')\n      setMessage(`\"${blogObject.title}\" was added`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n    catch (error) {\n      console.log(error.response.data)\n      setMessageClass('error')\n      setMessage('Error- couldn\\'t add new blog')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const blogsToShow = sortLikes\n  ? (function sortBlogs() {\n    const blogCopy = [...blogs]\n    const sortedBlogList = blogCopy.sort((blog1, blog2) => blog2.likes - blog1.likes)\n    return sortedBlogList\n  })()\n  : blogs\n  if (user === null) {\n    return (\n      <div>\n        <h1>Blogs</h1>\n        <Notification \n          message={message}\n          messageClass={messageClass}\n        />\n        <Toggle buttonLabelWhenHidden='Login' buttonLabelWhenShown='cancel'>\n          <LoginForm \n            userName={userName}\n            password={password}\n            user={user}\n            setUserName={setUserName}\n            setPassword={setPassword}\n            setUser={setUser}\n            setMessage={setMessage}\n            setMessageClass={setMessageClass}\n          />\n        </Toggle>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>Blogs</h1>\n      <h2>\n        {user.userName} is logged in<button onClick={handleLogout}>logout</button>\n      </h2>\n      <Notification \n        message={message}\n        messageClass={messageClass}\n      />\n      <Toggle \n        buttonLabelWhenHidden='Add new blog' \n        buttonLabelWhenShown='cancel'\n        ref={blogFormRef}\n      >\n        <BlogForm\n          setMessage={setMessage}\n          setMessageClass={setMessageClass}\n          addBlog={addBlog}\n        />\n      </Toggle>\n      <div>sort by: \n        <button onClick={() => setSortLikes(false)}>age</button>\n        <button onClick={() => setSortLikes(true)}>likes</button>\n      </div>\n      {blogsToShow.map(blog =>\n        <Blog \n          key={blog.id} \n          blog={blog} \n          user={user}\n          likeBlog={likeBlog}\n          deleteBlog={deleteBlog}\n        />\n      )}\n    </div>\n  )\n}\n//add button to each displayed blog\n//add togglable functionality to the button\n//each blog field gets own line\n//add css \n\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}